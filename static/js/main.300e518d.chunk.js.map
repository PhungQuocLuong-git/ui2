{"version":3,"sources":["component/Square.js","component/Board.js","component/Game.js","index.js"],"names":["Square","winnerPos","onClick","k","value","winpos","className","indexOf","Board","LEN","squares","temp","i","push","map","j","console","log","renderSquare","Game","props","status","useState","setLEN","Array","fill","latestCheck","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","selectedItem","setSelectedItem","sortBy","setSortBy","setWinnerPos","calculateWinner","lines","t","t1","t2","length","flag","handleSelectItem","step","current","winner","moves","move","desc","toString","type","onChange","e","target","alert","historyTemp","slice","concat","Math","floor","handleClick","reverse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.300e518d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nfunction Square({winnerPos, onClick, k, value}) {\r\n    const winpos = winnerPos\r\n    return (\r\n        <button onClick={onClick} className={winpos.indexOf(k) !== -1 ? \"square win\" : \"square\"}>\r\n            {value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport './index.css';\r\nimport Square from './Square';\r\n\r\nfunction Board({LEN, winnerPos, squares, onClick}) {\r\n    const renderSquare = (i) => {\r\n        console.log(i);\r\n        return (\r\n            <Square\r\n                key={i}\r\n                k={i}\r\n                winnerPos={winnerPos}\r\n                value={squares[i]}\r\n                onClick={() => onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    const temp = [];\r\n    for (let i = 0; i < LEN; i++) {\r\n        temp.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                temp.map(i =>\r\n                (\r\n                    <div key={i + \"abc\"} className=\"board-row\">\r\n                        {\r\n                            temp.map(j => renderSquare(LEN * i + j))\r\n                        }\r\n                    </div>\r\n                )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport './index.css';\r\n\r\nfunction Game(props) {\r\n\r\n    const [LEN, setLEN] = useState(5);\r\n\r\n    const [history, setHistory] = useState([\r\n        {\r\n            squares: Array(LEN * LEN).fill(null),\r\n            latestCheck: []\r\n\r\n        }\r\n    ])\r\n\r\n    const [stepNumber, setStepNumber] = useState(0)\r\n    const [xIsNext, setXIsNext] = useState(true)\r\n    const [selectedItem, setSelectedItem] = useState(0)\r\n    const [sortBy, setSortBy] = useState(true);\r\n    const [winnerPos, setWinnerPos] = useState([])\r\n\r\n    const handleClickSortBy = () => {\r\n        setSortBy(!sortBy)\r\n    }\r\n\r\n    const calculateWinner = (squares, LEN) => {\r\n        const lines = [];\r\n        for(let i=0;i<LEN;i++)\r\n        {\r\n          let t = [];\r\n          for(let j=0;j<LEN;j++)\r\n          {\r\n            t.push(i*LEN+j);\r\n          }\r\n          lines.push(t)\r\n        }\r\n      \r\n        for(let i=0;i<LEN;i++)\r\n        {\r\n          let t = [];\r\n          for(let j=0;j<LEN;j++)\r\n          {\r\n            t.push(j*LEN+i);\r\n          }\r\n          lines.push(t)\r\n        }\r\n      \r\n        let t1 =[]\r\n        let t2 = []\r\n        for(let i=0;i<LEN;i++)\r\n        {\r\n          t1.push(i*(LEN+1))\r\n          t2.push((i+1)*(LEN-1))\r\n        }\r\n      \r\n        lines.push(t1);\r\n        lines.push(t2);\r\n        console.log(lines);\r\n      \r\n        for (let i = 0; i < lines.length; i++) {\r\n      \r\n          let flag =0;\r\n          for(let j = 0;j <LEN; j++ )\r\n          {\r\n            if(j===0)\r\n            {\r\n              if (!squares[lines[i][0]]) flag=1;\r\n            }\r\n            else{\r\n              if (squares[lines[i][0]] !== squares[lines[i][j]]) flag=1;\r\n            }\r\n          }\r\n      \r\n          if(flag===0){\r\n            return [squares[lines[i][0]],lines[i]];\r\n          }\r\n          // if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            \r\n          //   return [squares[a],lines[i]];\r\n          // }\r\n        }\r\n        return null;\r\n      }\r\n\r\n    const handleClick = (i) => {\r\n        const historyTemp = history.slice(0, stepNumber + 1);\r\n        const current = historyTemp[historyTemp.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares, LEN) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = xIsNext ? \"X\" : \"O\";\r\n        setHistory(historyTemp.concat([\r\n            {\r\n                squares: squares,\r\n                latestCheck: [i % LEN, Math.floor(i / LEN)],\r\n                winnerPos: []\r\n            }\r\n        ]))\r\n        setStepNumber(historyTemp.length);\r\n        setXIsNext(!xIsNext)\r\n        setSelectedItem(selectedItem + 1)\r\n\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXIsNext((step % 2) === 0)\r\n    }\r\n\r\n    const handleSelectItem = (i) => {\r\n        jumpTo(i);\r\n        setSelectedItem(i);\r\n        setWinnerPos([]);\r\n    }\r\n\r\n    const current = history[stepNumber];\r\n    const winner = calculateWinner(current.squares, LEN);\r\n\r\n\r\n    const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move + \". Position :(\" + step.latestCheck.toString() + \")\" :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n                <button onClick={() => { handleSelectItem(move) }} className={selectedItem === move ? \"bold-text\" : \"\"}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = \"Winner: \" + winner[0];\r\n        if (winnerPos.length === 0) {\r\n            setWinnerPos(winner[1]);\r\n        }\r\n    } else {\r\n        if (history.length <= LEN * LEN) status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n        else status = \"The game result is a draw \";\r\n    }\r\n\r\n    const handleSetLen = e => {\r\n        if(e.target.value > 0)\r\n        {\r\n            setLEN(e.target.value);\r\n        }\r\n        else{\r\n            alert(\"Không được chọn giá trị âm\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"set\">\r\n                <label>Chọn kích thước ô đánh</label>\r\n                <div><input type=\"number\" value={LEN} onChange={handleSetLen}/></div>\r\n            </div>\r\n            <div className=\"game-board\">\r\n                <Board\r\n                    squares={current.squares}\r\n                    winnerPos={winnerPos}\r\n                    onClick={i => handleClick(i)}\r\n                    LEN = {LEN}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <button onClick={handleClickSortBy}>{sortBy ? \"Ascending\" : \"Descending\"}</button>\r\n                <div>{status}</div>\r\n                <ol>{sortBy ? moves : moves.reverse()}</ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n  \r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './component/Game';\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}